Raspberrypi setting
http://ljs93kr.tistory.com/35
http://www.knight-of-pi.org/pyenv-for-python-version-management-on-raspbian-stretch/

1. pyenv install

### install pyenv
# sudo apt-get install bzip2 libbz2-dev libreadline6 libreadline6-dev libffi-dev libssl1.0-dev sqlite3 libsqlite3-dev -y
# git clone git://github.com/yyuu/pyenv.git .pyenv
# curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash

echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(pyenv init -)"' >> ~/.bashrc

### install virtualenv
# git clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv
echo 'eval "$(pyenv virtualenv-init -)" >> ~/.bashrc
. ~/.bashrc

2. python3.6 version
pyenv install 3.6.3

3. opencv3.4.4 version

https://webnautes.tistory.com/916

# opencv compile
sudo apt-get install build-essential cmake pkg-config

# opencv image loader
sudo apt-get install libpng12-dev libjpeg-dev libtiff5-dev libjasper-dev

# opencv video
sudo apt-get install libavformat-dev libxvidcore-dev libswscale-dev libxine2-dev libavcodec-dev libx264-dev

# opencv realtime video
sudo apt-get install libv4l-dev v4l-utils libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

# opencv highgui module
sudo apt-get install libqt4-dev

# opengl
sudo apt-get install mesa-utils libgl1-mesa-dri libqt4-opengl-dev

# opencv opt
sudo apt-get install libatlas-base-dev gfortran libeigen3-dev

# opencv using python-dev
sudo apt-get install python3-dev python3-numpy

mkdir opencv
cd opencv
wget -O opencv.zip https://github.com/Itseez/opencv/archive/3.4.4.zip
unzip opencv.zip
wget -O opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/3.4.4.zip
unzip opencv_contrib.zip

cd opencv-3.4.4
rm -rf build
mkdir build
cd build

cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
# -D WITH_TBB=OFF \
-D WITH_TBB=ON \
-D CMAKE_CXX_FLAGS="-DTBB_USE_GCC_BUILTINS-1"
-D WITH_IPP=OFF \
-D BUILD_WITH_DEBUG_INFO=OFF \
-D BUILD_DOCS=OFF \
-D INSTALL_C_EXAMPLES=OFF \
-D INSTALL_PYTHON_EXAMPLES=OFF \
-D BUILD_EXAMPLES=OFF \
-D BUILD_TESTS=OFF \
-D BUILD_PERF_TESTS=OFF \
-D ENABLE_NEON=ON \
-D WITH_QT=ON \
-D WITH_OPENGL=ON \
-D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.4.4/modules \
-D WITH_V4L=ON \
-D WITH_FFMPEG=ON \
-D WITH_XINE=ON \
-D BUILD_NEW_PYTHON_SUPPORT=ON \
-D PYTHON2_INCLUDE_DIR=/usr/include/python2.7 \
-D PYTHON2_NUMPY_INCLUDE_DIRS=/usr/lib/python2.7/dist-packages/numpy/core/include/ \
-D PYTHON2_PACKAGES_PATH=/usr/lib/python2.7/dist-packages \
-D PYTHON2_LIBRARY= /usr/lib/arm-linux-gnueabihf/libpython2.7.so \
-D PYTHON3_INCLUDE_DIR=/usr/include/python3.5m \
-D PYTHON3_NUMPY_INCLUDE_DIRS=/usr/lib/python3/dist-packages/numpy/core/include/ \
-D PYTHON3_PACKAGES_PATH=/usr/lib/python3.5/dist-packages \
-D PYTHON3_LIBRARY=/usr/lib/arm-linux-gnueabihf/libpython3.5m.so \
../

make -j(CPUCORE 수)
make -j2

sudo make install
cat /etc/ld.so.conf.d/*
=>/usr/local/lib (존재유무 확인)

sudo cp /usr/local/python/cv2/python-3.5/cv2.cpython-35m-arm-linux-gnueabihf.so cv2.so
sudo ldconfig

4. dlib(19.16.0)
pip install dlib
